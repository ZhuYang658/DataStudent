<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--ResourceDictionary:资源词典窗口-->
    <!--
    1.在common通用层+右键+添加创建+WPF+中找+资源词典
    2.删掉原来的路径，不需要在原来的路径显示，把这个资源词典样式引用在要显示的页面
    3.如何引用：在FrmStuManager.xaml设计页面里引用
    -->
    <!--获取DataGrid标签添加样式-->
    <Style TargetType="DataGrid">
        <!--添加属性的标签；Property表示里面写什么属性类型；-->
        <Setter Property="AutoGenerateColumns" Value="False"></Setter><!--自动编辑列-->
        <Setter Property="CanUserResizeColumns" Value="False"></Setter><!--CanUserSortColumns="False"列不能拖拽大小-->
        <Setter Property="IsReadOnly" Value="True"></Setter><!--IsReadOnly="True"表示不能添加内容(只读)形式-->
        <Setter Property="RowHeaderWidth" Value="0"></Setter> <!--RowHeaderWidth="0"宽不能拖拽大小-->
        <Setter Property="CanUserSortColumns" Value="False"></Setter> <!--CanUserSortColumns="False"列不能拖拽大小-->
        <Setter Property="SelectionMode" Value="Single"></Setter><!--选中时只能选中一个-->
    </Style>
    <!--设置列标题里面的内容-->
    <Style TargetType="DataGridColumnHeader">
        <!--高度-->
        <Setter Property="Height" Value="30"></Setter>
        <!--字体-->
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <!--居中-->
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <!--字体大小-->
        <Setter Property="FontSize" Value="16"></Setter>
    </Style>
    
    <!--设置单元格的行-->
    <Style TargetType="DataGridRow">
        <Setter Property="Height" Value="28"></Setter>
        <!--Triggers触发器，用来写鼠标点击上去的显示的样式-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--鼠标选定后每一行格子颜色是红色，IsSelected表示鼠标点击后-->
                <Setter Property="Background" Value="Red"></Setter>
            </Trigger>
            <!--IsMouseOver这个也表示触发器的一种属性，表示每鼠标放上去时触发-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="pink"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--设置每个单元格-->
    <Style TargetType="DataGridCell">
        <!--指向原来的模版-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件的模版，设置的每一个单元格-->
                <ControlTemplate TargetType="DataGridCell">
                    <!--统一里面的内容用TextBlock-->
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center">
                        <ContentPresenter></ContentPresenter>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Triggers触发器：当鼠标点击去改变样式；IsSelected是触发器出发的一个属性，为True表示可以触发了，鼠标移入点击时触发-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--改变字体颜色，表示选定（鼠标点击确定）后字体表示粉色-->
                <Setter Property="Foreground" Value="Pink"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>